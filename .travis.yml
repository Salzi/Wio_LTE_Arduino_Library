language: generic
matrix:
  include:
    - env:
        - BOARD = "arduino:avr:uno"
    - env:
        - BOARD = "Seeeduino:samd:seeed_XIAO_m0"
# default phases
before_install:
  - mkdir -p "$HOME/bin"
  - curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR="$HOME/bin" sh
  - export PATH="$PATH:$HOME/bin"
  - arduino-cli core update-index --additional-urls https://downloads.arduino.cc/packages/package_index.json
  - arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/Seeed-Studio/Seeed_Platform/master/package_seeeduino_boards_index.json
  - arduino-cli  core install arduino:avr --additional-urls https://downloads.arduino.cc/packages/package_index.json
  - arduino-cli  core install Seeeduino:samd --additional-urls https://raw.githubusercontent.com/Seeed-Studio/Seeed_Platform/master/package_seeeduino_boards_index.json
  - |
    installLibrary() {
      local -r repositoryFullName="$1"
      local -r repositoryName="${repositoryFullName##*/}"
      # clone repository to the libraries folder of the sketchbook
      git clone https://github.com/${repositoryFullName} "${HOME}/Arduino/libraries/${repositoryName}"
      cd "${HOME}/Arduino/libraries/${repositoryName}"
      cd "${TRAVIS_BUILD_DIR}"
    }
- installLibrary Seeeed-Studio/Wio_LTE_Arduino_Library
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch SDCard;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch sleepWakeupControl;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch TCPConnect;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch GNSS;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch GroveUART;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch SMSSend;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch AT_bypass;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch Check_battery;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch CallUp;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch TimerInterrupt;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch SMSRead;
      fi
    - |
      if [ "$BOARD" == "arduino:avr:uno" ]; then
        buildExampleSketch RSSI;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch SDCard;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch sleepWakeupControl;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch TCPConnect;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch GNSS;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch GroveUART;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch SMSSend;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch AT_bypass;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch Check_battery;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch CallUp;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch TimerInterrupt;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch SMSRead;
      fi
    - |
      if [ "$BOARD" == "Seeeduino:samd:seeed_XIAO_m0" ]; then
        buildExampleSketch RSSI;
      fi
notifications:
  webhooks:
    urls:
      - https://www.travisbuddy.com/
    on_success: never
    on_failure: always

